"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[565],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>b});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(a),m=o,b=p["".concat(s,".").concat(m)]||p[m]||u[m]||r;return a?n.createElement(b,i(i({ref:t},c),{},{components:a})):n.createElement(b,i({ref:t},c))}));function b(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8157:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var n=a(7462),o=(a(7294),a(3905));const r={sidebar_position:4},i="Hito 4",l={unversionedId:"hitos/hito-4",id:"hitos/hito-4",title:"Hito 4",description:"Interfaz de L\xednea de comando",source:"@site/docs/hitos/hito-4.md",sourceDirName:"hitos",slug:"/hitos/hito-4",permalink:"/docs/hitos/hito-4",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/hitos/hito-4.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Hito 3",permalink:"/docs/hitos/hito-3"},next:{title:"Hito 5",permalink:"/docs/hitos/hito-5"}},s={},d=[{value:"Interfaz de L\xednea de comando",id:"interfaz-de-l\xednea-de-comando",level:2},{value:"Options",id:"options",level:4},{value:"<code>--validate</code>",id:"--validate",level:5},{value:"<code>--stats</code>",id:"--stats",level:5}],c={toc:d},p="wrapper";function u(e){let{components:t,...a}=e;return(0,o.kt)(p,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"hito-4"},"Hito 4"),(0,o.kt)("h2",{id:"interfaz-de-l\xednea-de-comando"},"Interfaz de L\xednea de comando"),(0,o.kt)("p",null,"En este hito, crear\xe1s un paquete ejecutable de tu c\xf3digo, el mismo que internamente ejecutar\xe1 la funci\xf3n mdLinks que acabas de crear."),(0,o.kt)("p",null,"Tu m\xf3dulo debe ser instalable via npm install ",(0,o.kt)("inlineCode",{parentName:"p"},"<github-user>/md-links"),"."),(0,o.kt)("p",null,"Este m\xf3dulo debe incluir tanto un ejecutable que podamos invocar en la l\xednea de comando como una interfaz que podamos importar con require para usarlo program\xe1ticamente."),(0,o.kt)("p",null,"Este paquete deber\xe1 estar documentado y alojado en npm para poderlo descargar."),(0,o.kt)("p",null,"El ejecutable de tu aplicaci\xf3n debe poder correr de la siguiente manera a trav\xe9s de la terminal:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"md-links <path-to-file> [options]")),(0,o.kt)("p",null,"Por ejemplo:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/Laboratoria/bootcamp/assets/123121338/7dcc83c4-873e-4ef8-b7d0-a15adb102680",alt:"mdlinks-example"})),(0,o.kt)("p",null,"El comportamiento por defecto no debe validar si las URLs responden ok o no, solo debe identificar el archivo markdown (a partir de la ruta que recibe como argumento), analizar el archivo Markdown e imprimir los links que vaya\nencontrando, junto con la ruta del archivo donde aparece y el texto que hay dentro del link (truncado a 50 caracteres)."),(0,o.kt)("h4",{id:"options"},"Options"),(0,o.kt)("h5",{id:"--validate"},(0,o.kt)("inlineCode",{parentName:"h5"},"--validate")),(0,o.kt)("p",null,"Si pasamos la opci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"--validate"),", el m\xf3dulo debe hacer una petici\xf3n HTTP para\naveriguar si el link funciona o no. Si el link resulta en una redirecci\xf3n a una\nURL que responde ok, entonces consideraremos el link como ok."),(0,o.kt)("p",null,"Por ejemplo:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/Laboratoria/bootcamp/assets/123121338/502cbafc-b4ac-4734-85b3-1734f67af1d3",alt:"mdlinks-example-validate"})),(0,o.kt)("p",null,"Vemos que el ",(0,o.kt)("em",{parentName:"p"},"output")," en este caso incluye la palabra ",(0,o.kt)("inlineCode",{parentName:"p"},"ok")," o ",(0,o.kt)("inlineCode",{parentName:"p"},"fail")," despu\xe9s de\nla URL, as\xed como el status de la respuesta recibida a la petici\xf3n HTTP a dicha\nURL."),(0,o.kt)("h5",{id:"--stats"},(0,o.kt)("inlineCode",{parentName:"h5"},"--stats")),(0,o.kt)("p",null,"Si pasamos la opci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"--stats")," el output (salida) ser\xe1 un texto con estad\xedsticas\nb\xe1sicas sobre los links."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/Laboratoria/bootcamp/assets/123121338/910720c6-aa3f-4d08-b076-c1add13c95f1",alt:"mdlinks-example-stats"})),(0,o.kt)("p",null,"Tambi\xe9n podemos combinar ",(0,o.kt)("inlineCode",{parentName:"p"},"--validate")," y ",(0,o.kt)("inlineCode",{parentName:"p"},"--stats")," para obtener estad\xedsticas que\nnecesiten de los resultados de la validaci\xf3n."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/Laboratoria/bootcamp/assets/123121338/9d9971a0-866a-4c64-a890-4c62c3df3700",alt:"mdlinks-example-stats-validate"})),(0,o.kt)("p",null,"Para ejecutar tu script utilizando el comando ",(0,o.kt)("inlineCode",{parentName:"p"},"mdlinks"),", debes vincular este comando al sistema. Sin embargo, antes de vincular el comando, puedes desarrollar tu interfaz de l\xednea de comandos (CLI) invoc\xe1ndola con node. Por ejemplo, puedes usar el siguiente comando: "),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"node <RUTA_DE_TU_CLI.js> ruta options")),(0,o.kt)("admonition",{title:"No olvides los tests",type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"Antes de pasar al siguiente hito, aseg\xfarate de escribir los tests correspondientes al c\xf3digo del hito actual.")))}u.isMDXComponent=!0}}]);